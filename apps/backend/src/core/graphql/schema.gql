# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  createdAt: DateTime!
  id: ID!
  imageUrl: String
  name: String!
  updatedAt: DateTime!
}

input CreateCategoryInput {
  name: String!
}

input CreateOrderInput {
  buyerAddress: String!
  escrowId: String!
  productId: String!
  sellerAddress: String!
  status: OrderStatus! = PENDING
}

input CreateProductInput {
  categoryId: String!
  description: String
  name: String!
  price: Float!
  slug: String!
}

input CreateUserInput {
  country: String!
  email: String!
  isSeller: Boolean! = false
  name: String!
  surname: String!
  telegramUsername: String
  walletAddress: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  createCategory(data: CreateCategoryInput!): Category!
  createOrder(data: CreateOrderInput!): Order!
  createProduct(data: CreateProductInput!): ProductDTO!
  createProductImage(createProductImage: ProductImageDTO!): ProductImage!
  createUser(data: CreateUserInput!): User!
  updateOrderStatus(data: UpdateOrderStatusInput!): Order!
  updateUser(data: UpdateUserInput!, walletAddress: String!): User!
}

type Order {
  buyer_address: String!
  created_at: DateTime!
  escrow_id: String!
  id: String!
  product_id: String!
  seller_address: String!
  status: OrderStatus!
  updated_at: DateTime!
}

enum OrderStatus {
  APPROVED
  FOR_REVIEW
  ON_DISPUTE
  PENDING
}

type ProductDTO {
  categoryId: String!
  createdAt: DateTime!
  description: String
  id: ID!
  name: String!
  price: Float!
  slug: String!
  updatedAt: DateTime!
}

type ProductImage {
  createdAt: DateTime!
  id: ID!
  imageUrl: String!
  productId: String!
  updatedAt: DateTime!
}

input ProductImageDTO {
  imageUrl: String!
  productId: String!
}

type Query {
  categories: [Category!]!
  category(id: String!): Category
  getOrder(orderId: String!): Order!
  getOrdersByBuyer(buyerAddress: String!): [Order!]!
  getOrdersBySeller(sellerAddress: String!): [Order!]!
  product(id: String!): ProductDTO
  productImage(id: String!): ProductImage
  productImages: [ProductImage!]!
  products: [ProductDTO!]!
  user(walletAddress: String!): User
  users: [User!]!
}

input UpdateOrderStatusInput {
  orderId: String!
  status: OrderStatus!
}

input UpdateUserInput {
  country: String
  email: String
  isSeller: Boolean = false
  name: String
  surname: String
  telegramUsername: String
  walletAddress: String
}

type User {
  country: String!
  createdAt: DateTime!
  email: String!
  isSeller: Boolean!
  name: String!
  surname: String!
  telegramUsername: String
  updatedAt: DateTime!
  walletAddress: String!
}